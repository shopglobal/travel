# coding: utf-8

"""
    Amadeus Travel Innovation Sandbox

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    OpenAPI spec version: 1.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class FlightSearchBound(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'flights': 'list[FlightSearchSegment]',
        'duration': 'str'
    }

    attribute_map = {
        'flights': 'flights',
        'duration': 'duration'
    }

    def __init__(self, flights=None, duration=None):
        """
        FlightSearchBound - a model defined in Swagger
        """

        self._flights = None
        self._duration = None

        self.flights = flights
        if duration is not None:
          self.duration = duration

    @property
    def flights(self):
        """
        Gets the flights of this FlightSearchBound.

        :return: The flights of this FlightSearchBound.
        :rtype: list[FlightSearchSegment]
        """
        return self._flights

    @flights.setter
    def flights(self, flights):
        """
        Sets the flights of this FlightSearchBound.

        :param flights: The flights of this FlightSearchBound.
        :type: list[FlightSearchSegment]
        """
        if flights is None:
            raise ValueError("Invalid value for `flights`, must not be `None`")

        self._flights = flights

    @property
    def duration(self):
        """
        Gets the duration of this FlightSearchBound.
        The duration of this bound, including layover time, expressed in the format hh:mm

        :return: The duration of this FlightSearchBound.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """
        Sets the duration of this FlightSearchBound.
        The duration of this bound, including layover time, expressed in the format hh:mm

        :param duration: The duration of this FlightSearchBound.
        :type: str
        """

        self._duration = duration

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, FlightSearchBound):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
